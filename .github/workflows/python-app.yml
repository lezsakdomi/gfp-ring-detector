name: Build standalone executable

on:
  push:
    branches: [ master ]

jobs:
  build-dist-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: ðŸ”§ Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.10
    - name: ðŸ”§ Set up Elm
      uses: mpizenberg/elm-tooling-action@v1.2
      with:
        cache-key: elm-home-${{ hashFiles('frontend/elm-tooling.json', 'frontend/elm.json') }}
    - name: âš™ Create execution environment
      run: |
        C:\Miniconda\condabin\activate.bat
        conda env create -f environment.yml -n env
        conda activate env
    - name: ðŸ”§ Set up conda-pack
      run: |
        conda install conda-pack
    - name: âš™ Package execution environment
      run: |
        conda pack -n env -o env.tar
    - name: ðŸ’¾ Add sources to distribution
      uses: actions/checkout@v3
      with:
        path: dist
    - name: ðŸ’¾ Add environment to distribution
      run: |
        7z x -odist env.tar
    - name: âš™ Build frontend
      run: |
        elm make frontned/Main.elm --output dist/frontend/Main.js
#    - name: ðŸ“¤ Archive production artifacts
#      uses: actions/upload-artifact@v3
#      with:
#        name: dist-windows
#        path: |
#          dist
#        retention-days: 3
    - name: ðŸ“¦ ZIP
      run: 7z a windows.zip ./dist/*
    - name: ðŸš€ Update release
      uses: johnwbyrd/update-release@v1.0.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: ./windows.zip

  build-doc:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get install -y pandoc python3-pip ruby jq default-jre graphviz
          sudo pip install pandoc-plantuml-filter
          sudo gem install liquid-cli
          mkdir -p ~/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          wget -O ~/.local/bin/plantuml.jar https://github.com/plantuml/plantuml/releases/download/v1.2022.4/plantuml-1.2022.4.jar
          echo '#!/bin/bash' >~/.local/bin/plantuml
          echo 'java -jar -Djava.net.useSystemProxies=true ~/.local/bin/plantuml.jar ${@}' >>~/.local/bin/plantuml
          chmod +x ~/.local/bin/plantuml
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare documentation
        run: liquid <doc.md >doc.prep.md "$(jq -n env)"
        working-directory: doc
      - name: Build documentation as HTML
        run: pandoc -o doc.html doc.prep.md --filter pandoc-plantuml
        working-directory: doc
      - uses: actions/upload-artifact@v3
        with:
          name: doc-html
          path: |
            doc/index.html
            doc/doc.html
            doc/plantuml-images/
      - name: ZIP
        run: tar -czf doc.tgz doc/**
      - name: Update release
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./doc.tgz
