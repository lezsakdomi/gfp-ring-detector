name: Build standalone executable

on:
  push:
    branches: [ master ]

jobs:
  build-dist-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.10
    - name: Install dependencies
      run: |
        C:\Miniconda\condabin\conda.bat env update --file conda-env.yml --name base
        C:\Miniconda\condabin\conda.bat init powershell
    - name: Build application
      run: |
        # Activate the base environment
        C:\Miniconda\condabin\conda.bat activate base
        pyinstaller.exe .\interactive-server.spec
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-windows
        path: |
          dist

  build-doc:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get install -y pandoc python3-pip ruby jq default-jre
          sudo pip install pandoc-plantuml-filter
          sudo gem install liquid-cli
          mkdir -p ~/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          wget -O ~/.local/bin/plantuml.jar https://github.com/plantuml/plantuml/releases/download/v1.2022.4/plantuml-1.2022.4.jar
          echo '#!/bin/bash' >~/.local/bin/plantuml
          echo 'java -jar -Djava.net.useSystemProxies=true ~/.local/bin/plantuml.jar ${@}' >>~/.local/bin/plantuml
          chmod +x ~/.local/bin/plantuml
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare documentation
        run: liquid <doc.md >doc.prep.md "$(jq -n env)"
        working-directory: doc
      - name: Build documentation as HTML
        run: pandoc -o doc.html doc.prep.md --filter pandoc-plantuml
        working-directory: doc
      - uses: actions/upload-artifact@v3
        with:
          name: doc-html
          path: |
            doc/index.html
            doc/doc.html
            doc/plantuml-images/

  deploy-pages:
    runs-on: ubuntu-latest
    needs: [build-doc, build-dist-windows]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: doc-html
      - uses: actions/download-artifact@v3
        with:
          name: dist-windows
          path: dist-windows
      - name: Initialize git repository for deployment
        run: |
          git init
          git -c user.name="CI" -c user.email="actions@github.com" commit -m "Initial commit" --allow-empty
      - uses: JamesIves/github-pages-deploy-action@v4.3.0
        with:
          branch: gh-pages
          folder: .
          ssh-key: ${{ secrets.PAGES_DEPLOY_KEY }}
